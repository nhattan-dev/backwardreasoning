/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Layout;

import Object.KnowledgeBase;
import java.awt.BorderLayout;
import java.awt.HeadlessException;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Welcome
 */
public class interFace extends javax.swing.JFrame {

    /**
     * Creates new form interFace
     */
    public interFace() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Backward Chaining");
        setResizable(false);
        jTextArea1.setText("CóNgườiYêu,XaNgườiYêu,ThẩnThờ>NhớNgườiYêu\n"
                + "CóNgườiYêu,PhimTìnhCảm>NhớNgườiYêu\n"
                + "Corona,GáiXinh>NhớNgườiYêu\n"
                + "GaLăng,VíBaPhân>CóNgườiYêu\n"
                + "RảnhRỗi>ThẩnThờ\n"
                + "VíBaPhân,Corona>ThẩnThờ\n"
                + "XaNgườiYêu,XemPhim>PhimTìnhCảm\n"
                + "GáiXinh>PhimTìnhCảm");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtKQ = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btFile = new javax.swing.JButton();
        btBackward = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        option6 = new javax.swing.JCheckBox();
        option2 = new javax.swing.JCheckBox();
        option4 = new javax.swing.JCheckBox();
        option1 = new javax.swing.JCheckBox();
        option5 = new javax.swing.JCheckBox();
        option7 = new javax.swing.JCheckBox();
        option3 = new javax.swing.JCheckBox();
        option8 = new javax.swing.JCheckBox();
        option9 = new javax.swing.JCheckBox();
        option10 = new javax.swing.JCheckBox();
        option11 = new javax.swing.JCheckBox();
        btKT = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt.setEditable(false);
        txt.setColumns(14);
        txt.setFont(new java.awt.Font("Monospaced", 2, 18)); // NOI18N
        txt.setLineWrap(true);
        txt.setRows(5);
        jScrollPane1.setViewportView(txt);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 40, 480, 410));

        txtKQ.setEditable(false);
        txtKQ.setColumns(20);
        txtKQ.setFont(new java.awt.Font("Monospaced", 2, 18)); // NOI18N
        txtKQ.setLineWrap(true);
        txtKQ.setRows(5);
        jScrollPane2.setViewportView(txtKQ);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 40, 520, 410));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Đề bài");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, 480, 20));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Kết quả");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 10, 520, 20));

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btFile.setText("File");
        btFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFileActionPerformed(evt);
            }
        });

        btBackward.setText("Backward");
        btBackward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBackwardActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btFile, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btBackward, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(btFile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btBackward)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 130, -1));

        jTabbedPane1.addTab("Nothing", jPanel1);

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        option6.setText("Ví Ba Phân");
        jPanel4.add(option6, new org.netbeans.lib.awtextra.AbsoluteConstraints(165, 40, 104, -1));

        option2.setText("Xa Người Yêu");
        jPanel4.add(option2, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 92, 120, -1));

        option4.setText("Nhớ Người Yêu");
        jPanel4.add(option4, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 194, 120, -1));

        option1.setText("Có Người Yêu");
        jPanel4.add(option1, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 40, 120, -1));

        option5.setText("Ga Lăng");
        jPanel4.add(option5, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 246, 120, -1));

        option7.setText("Rảnh Rỗi");
        jPanel4.add(option7, new org.netbeans.lib.awtextra.AbsoluteConstraints(165, 92, 104, -1));

        option3.setText("Thẩn Thờ");
        jPanel4.add(option3, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 149, 120, -1));

        option8.setText("Corona");
        jPanel4.add(option8, new org.netbeans.lib.awtextra.AbsoluteConstraints(165, 149, 104, -1));

        option9.setText("Xem Phim");
        jPanel4.add(option9, new org.netbeans.lib.awtextra.AbsoluteConstraints(165, 194, 104, -1));

        option10.setText("Gái Xinh");
        jPanel4.add(option10, new org.netbeans.lib.awtextra.AbsoluteConstraints(165, 246, 104, -1));

        option11.setText("Phim Tình Cảm");
        jPanel4.add(option11, new org.netbeans.lib.awtextra.AbsoluteConstraints(77, 299, -1, -1));

        jPanel3.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 14, 280, 330));

        btKT.setText("Kiểm Tra");
        btKT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btKTActionPerformed(evt);
            }
        });
        jPanel3.add(btKT, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 373, -1, -1));

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        jPanel3.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 10, 510, 340));

        jTabbedPane1.addTab("_App", jPanel3);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 490));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFileActionPerformed
        // TODO add your handling code here:
        btBackward.setEnabled(true);
        txt.setText("");
        khoiTao();
        //get the file
        try {
            JFileChooser choose = new JFileChooser();
            FileFilter filter = new FileNameExtensionFilter(null, "txt");
            choose.setFileFilter(filter);
            choose.showOpenDialog(rootPane);
            file = choose.getSelectedFile();
        } catch (HeadlessException e) {
        }

        //get value
        readFile(file);
        showData(file);
        LR = new ArrayList<>(RB);
    }//GEN-LAST:event_btFileActionPerformed

    private void btBackwardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBackwardActionPerformed
        // TODO add your handling code here:
        txtKQ.setText("");
        if (Start() == true) {
            JOptionPane.showMessageDialog(rootPane, "Rule " + LR.get(0).getRule().toUpperCase()
                    + " right!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Không giải được!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        }
        btBackward.setEnabled(false);
    }//GEN-LAST:event_btBackwardActionPerformed

    private void btKTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btKTActionPerformed
        // TODO add your handling code here:
        khoiTao();
        btBackward.setEnabled(true);
        readFile(new File("txt.txt"));
        LR = new ArrayList<>(RB);
        FB.removeAll(FB);
        getData();
        btBackward.doClick();
    }//GEN-LAST:event_btKTActionPerformed

    public void getData() {
        if (option1.isSelected()) {
            FB.add("CóNgườiYêu");
        }
        if (option2.isSelected()) {
            FB.add("XaNgườiYêu");
        }
        if (option3.isSelected()) {
            FB.add("ThẩnThờ");
        }
        if (option4.isSelected()) {
            FB.add("NhớNgườiYêu");
        }
        if (option5.isSelected()) {
            FB.add("GaLăng");
        }
        if (option6.isSelected()) {
            FB.add("VíBaPhân");
        }
        if (option7.isSelected()) {
            FB.add("RảnhRỗi");
        }
        if (option8.isSelected()) {
            FB.add("Corona");
        }
        if (option9.isSelected()) {
            FB.add("XemPhim");
        }
        if (option10.isSelected()) {
            FB.add("GáiXinh");
        }
        if (option11.isSelected()) {
            FB.add("PhimTìnhCảm");
        }
    }

    public void showData(File file) {
        try {
            Scanner scan = new Scanner(file);
            while (scan.hasNext()) {
                txt.setText(txt.getText() + scan.nextLine() + "\n");
            }

        } catch (FileNotFoundException ex) {
            Logger.getLogger(interFace.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void readFile(File file) {
        ArrayList<String> line = new ArrayList<>();
        String str;
        try {
            Scanner scan = new Scanner(file);
            while (scan.hasNext()) {
                str = scan.nextLine();
                if (!str.equals("")) {
                    line.add(str);
                }
            }
        } catch (FileNotFoundException e) {
        }
        line.forEach((string) -> {
            if (string.contains(">")) {
                String[] str1 = string.split(">");
                ArrayList<String> cond = new ArrayList<>();
                cond.addAll(Arrays.asList(str1[0].split(",")));
                RB.add(new KnowledgeBase(cond, str1[1]));
            } else {
                FB.addAll(Arrays.asList(string.split(",")));
            }
        });
    }

    public JPanel line(String rule, ArrayList<String> H) {
        JPanel jp = new JPanel();
        jp.setSize(230, 50);
        JLabel rules = new JLabel("Rule " + rule + ":");
        rules.setSize(50, 70);
        JLabel h = new JLabel("Rule " + rule + ":");
        h.setSize(50, 70);
        jp.setLayout(new BorderLayout());
        jp.add(rules);
        jp.add(h);
        return jp;
    }

    public boolean Start() {
        String x;
        //LR là ds luật chưa duyệt
        while (LR.size() > 0) {
            x = LR.get(0).getRule();
            //H thêm đầu tiên
            H.add(x);
            txtKQ.setText(txtKQ.getText() + "Áp dụng luật " + x);
            //Bắt đầu kiểm tra
            if (backward(x, H) == true) {
                txtKQ.setText(txtKQ.getText() + "\n" + LR.get(0).getRule() + " giải được!");
                return true;
            }
            txtKQ.setText(txtKQ.getText() + "\n" + LR.get(0).getRule() + " không giải được!");
            txtKQ.setText(txtKQ.getText() + "\n\n");
            //remove luật đã duyệt
            for (int i = 1; i < LR.size(); i++) {
                if (LR.get(i).getRule().equals(LR.get(0).getRule())) {
                    LR.remove(i);
                    i--;
                }
            }
            LR.remove(0);
            //Xóa danh sách H
            H.removeAll(H);
        }
        return false;
    }

    public void khoiTao() {
        FB = new ArrayList<>();
        RB = new ArrayList<>();
        LR = new ArrayList<>();
        H = new ArrayList<>();
    }

    public boolean backward(String rule, ArrayList Hdata) {
        ArrayList<String> Hlocal;
        //Mỗi luật được duyệt qua RB.size() lần
        for (KnowledgeBase kn : RB) {
            //Tránh thay đổi dữ liệu gốc
            Hlocal = new ArrayList(Hdata);
            //Nếu rule trùng với luật
            if (kn.getRule().equals(rule)) {
                //Loai rule ra khoi H
                Hlocal = removeX(Hlocal, rule);
                //Them tat ca conditions cua rule, không tồn tại condition thuộc FB
                txtKQ.setText(txtKQ.getText() + "\nH sau khi thêm conditions của " + rule + ":");
                txtKQ.setText(txtKQ.getText() + "\n" + (Hlocal.isEmpty() ? "" : Hlocal.toString()) + kn.getCondition().toString());
                Hlocal.addAll(standarzed(kn.getCondition()));
                txtKQ.setText(txtKQ.getText() + "\nH sau khi chuẩn hóa: ");
                txtKQ.setText(txtKQ.getText() + "\n" + Hlocal.toString());
                if (Hlocal.isEmpty()) {
                    return true;
                }
                String nextRule = Hlocal.get(0);
                if (backward(nextRule, Hlocal) == true) {
                    return true;
                }
            }
        }
        txtKQ.setText(txtKQ.getText() + "\nKhông giải được, quay lại");
        return false;
    }

    //Xóa giá trị x khỏi ArrayList
    public ArrayList removeX(ArrayList<String> Hdata, String x) {
        ArrayList<String> Hlocal = new ArrayList<>(Hdata);
        for (String str : Hlocal) {
            if (str.equals(x)) {
                Hlocal.remove(str);
                break;
            }
        }
        return Hlocal;
    }

    //Loai cac luat nam trong FB
    public ArrayList standarzed(ArrayList Hdata) {
        ArrayList<String> Hlocal = new ArrayList<>(Hdata);
        String strH;
        //Với mỗi phần tử Hlocal
        for (int i = 0; i < Hlocal.size(); i++) {
            strH = Hlocal.get(i);
            //Với mỗi phần tử FB
            for (String strF : FB) {
                //Nếu strH trùng với FB
                if (strH.equals(strF)) {
                    //Loại bỏ nó khỏi Hlocal
                    Hlocal.remove(strH);
                    --i;
                    break;
                }
            }
        }
        return Hlocal;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(interFace.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(interFace.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(interFace.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(interFace.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new interFace().setVisible(true);
        });
    }

    File file = null;
    private ArrayList<String> FB = new ArrayList<>();
    private ArrayList<KnowledgeBase> RB = new ArrayList<>();
    private ArrayList<KnowledgeBase> LR = new ArrayList<>();
    private ArrayList<String> H = new ArrayList<>();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btBackward;
    private javax.swing.JButton btFile;
    private javax.swing.JButton btKT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JCheckBox option1;
    private javax.swing.JCheckBox option10;
    private javax.swing.JCheckBox option11;
    private javax.swing.JCheckBox option2;
    private javax.swing.JCheckBox option3;
    private javax.swing.JCheckBox option4;
    private javax.swing.JCheckBox option5;
    private javax.swing.JCheckBox option6;
    private javax.swing.JCheckBox option7;
    private javax.swing.JCheckBox option8;
    private javax.swing.JCheckBox option9;
    private javax.swing.JTextArea txt;
    private javax.swing.JTextArea txtKQ;
    // End of variables declaration//GEN-END:variables
}
